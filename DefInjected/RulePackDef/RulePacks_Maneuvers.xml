<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>damaged_inf->bite</li>
    <li>damaged_inf->chomp</li>
    <li>damaged_inf(p=0.5)->nip</li>
    <li>damaged_past->bit</li>
    <li>damaged_past->chomped</li>
    <li>damaged_past->nipped</li>
    <li>damaged_past->gnawed</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_present->biting</li>
    <li>damaged_present->chomping</li>
    <li>damaged_present->nipped</li>
    <li>damaged_present->gnawing</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving grisly tears in the skin</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->leaving grisly tears in the metal</li>
    <li>destroyed_past->devoured</li>
    <li>destroyed_past->separated</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_past->ravaged</li>
    <li>destroyed_present->devouring</li>
    <li>destroyed_present->separating</li>
    <li>destroyed_present->ripping</li>
    <li>destroyed_present->ravaging</li>
    <li>destroyed_suffix->[to] shreds</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] an unrecognizable mess</li>
  -->
  <Maneuver_Bite.rulePack.rulesStrings>
    <li>damaged_inf->morder</li>
    <li>damaged_inf->morder</li>
    <li>damaged_inf(p=0.5)->beliscar</li>
    <li>damaged_past->mordeu</li>
    <li>damaged_past->mastigou</li>
    <li>damaged_past->beliscou</li>
    <li>damaged_past->roeu</li>
    <li>damaged_past(deflected!=True)->rasgou</li>
    <li>damaged_present->mordendo</li>
    <li>damaged_present->mastigando</li>
    <li>damaged_present->beliscando</li>
    <li>damaged_present->roendo</li>
    <li>damaged_present(deflected!=True)->rasgando</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->ficando na carne viva</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->circuitos aparecendo</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando marcas horriveis na pele</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->deixando marcas horriveis no metal</li>
    <li>destroyed_past->devorado</li>
    <li>destroyed_past->separado</li>
    <li>destroyed_past->rasgado</li>
    <li>destroyed_past->destruido</li>
    <li>destroyed_present->devorando</li>
    <li>destroyed_present->separando</li>
    <li>destroyed_present->rasgando</li>
    <li>destroyed_present->destruindo</li>
    <li>destroyed_suffix->[to] farrapos</li>
    <li>destroyed_suffix->[to] peças</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras bagunçadas</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] uma bagunça irreconhecível</li>
  </Maneuver_Bite.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] dodged out of the way.</li>
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but [RECIPIENT_definite] blocked it.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] tentou jogar [TOOL_label] nos olhos de [RECIPIENT_definite], mas [RECIPIENT_definite] se desviou.</li>
    <li>r_logentry->[INITIATOR_definite] tentou jogar [TOOL_label] nos olhos de [RECIPIENT_definite], mas [RECIPIENT_definite] bloqueou.</li>
  </Maneuver_KickMaterialInEyes_MeleeDodge.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] kicked [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] kicked a spray of [TOOL_label] in [RECIPIENT_definite]'s eyes.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] jogou [TOOL_label] nos olhos de [RECIPIENT_definite].</li>
    <li>r_logentry(p=0.2)->[INITIATOR_definite] lançou um spray de [TOOL_label] nos olhos de [RECIPIENT_definite].</li>
  </Maneuver_KickMaterialInEyes_MeleeHit.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[INITIATOR_definite] tried to kick [TOOL_label] in [RECIPIENT_definite]'s eyes, but missed.</li>
  -->
  <Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
    <li>r_logentry->[INITIATOR_definite] tentou jogar [TOOL_label] nos olhos de [RECIPIENT_definite], mas errou.</li>
  </Maneuver_KickMaterialInEyes_MeleeMiss.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=2)->poke</li>
    <li>damaged_inf(p=2)->jab</li>
    <li>damaged_inf->prod</li>
    <li>damaged_inf->shove</li>
    <li>damaged_inf->stab</li>
    <li>damaged_past(p=2)->poked</li>
    <li>damaged_past(p=2)->jabbed</li>
    <li>damaged_past->prodded</li>
    <li>damaged_past->shoved</li>
    <li>damaged_past->stabbed</li>
    <li>damaged_present(p=2)->poking</li>
    <li>damaged_present(p=2)->jabbing</li>
    <li>damaged_present->prodding</li>
    <li>damaged_present->shoving</li>
    <li>damaged_present->stabbing</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise</li>
    <li>flavortext_consequence->leaving the area visibly deformed</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] off balance</li>
    <li>flavortext_consequence->knocking [RECIPIENT_objective] to the side</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] bits</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist</li>
    <li>destroyed_suffix->[to] fragments</li>
  -->
  <Maneuver_Poke.rulePack.rulesStrings>
    <li>damaged_inf(p=2)->cutucar</li>
    <li>damaged_inf(p=2)->golpear</li>
    <li>damaged_inf->incitar</li>
    <li>damaged_inf->empurrar</li>
    <li>damaged_inf->esfaquear</li>
    <li>damaged_past(p=2)->cutucou</li>
    <li>damaged_past(p=2)->golpeou</li>
    <li>damaged_past->incitou</li>
    <li>damaged_past->empurrou</li>
    <li>damaged_past->esfaqueou</li>
    <li>damaged_present(p=2)->cutucando</li>
    <li>damaged_present(p=2)->golpeando</li>
    <li>damaged_present->incitando</li>
    <li>damaged_present->empurrando</li>
    <li>damaged_present->esfaqueando</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando uma enorme contusão</li>
    <li>flavortext_consequence->deixando a área visivelmente deformada</li>
    <li>flavortext_consequence->batendo [RECIPIENT_objective] desequilibrando</li>
    <li>flavortext_consequence->batendo [RECIPIENT_objective] para o lado</li>
    <li>destroyed_past->despedaçado</li>
    <li>destroyed_past->esmagado</li>
    <li>destroyed_past->destruido</li>
    <li>destroyed_past->aniquilado</li>
    <li>destroyed_past->quebrado</li>
    <li>destroyed_present->despedaçando</li>
    <li>destroyed_present->esmagando</li>
    <li>destroyed_present->destruindo</li>
    <li>destroyed_present->aniquilando</li>
    <li>destroyed_present->quebrando</li>
    <li>destroyed_suffix->[to] peças</li>
    <li>destroyed_suffix->[to] pedaços</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] uma névoa fina</li>
    <li>destroyed_suffix->[to] fragmentos</li>
  </Maneuver_Poke.rulePack.rulesStrings>
  
  <!-- EN:
    <li>woundname->wound</li>
    <li>woundname(p=0.3)->opening</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname]</li>
    <li>flavortext_situation->with fluids dripping from the [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and exposing the flesh underneath</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->and exposing the machinery underneath</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->and leaving a gory [woundname]</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy strips</li>
    <li>destroyed_suffix->[to] strips</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] messy pieces</li>
    <li>destroyed_suffix->[to] pieces</li>
    <li>destroyed_suffix->[to] fragments</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a pile of gore</li>
  -->
  <Maneuver_Scratch.rulePack.rulesStrings>
    <li>woundname->ferida</li>
    <li>woundname(p=0.3)->abertura</li>
    <li>flavortext_situation(recipient_flesh!=Mechanoid)->com sangue escorrendo da [woundname]</li>
    <li>flavortext_situation->com fluidos escorrendo da [woundname]</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->e expondo a carne viva</li>
    <li>flavortext_consequence(recipient_flesh==Mechanoid)->e expondo as peças internas</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->e deixando uma [woundname] sangrando</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] tiras bagunçadas</li>
    <li>destroyed_suffix->[to] tiras</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] peças bagunçadas</li>
    <li>destroyed_suffix->[to] peças</li>
    <li>destroyed_suffix->[to] fragmentos</li>
    <li>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] uma pilha de sangue</li>
  </Maneuver_Scratch.rulePack.rulesStrings>
  
  <!-- EN:
    <li>damaged_inf(p=4)->scratch</li>
    <li>damaged_inf(deflected!=True)->lacerate</li>
    <li>damaged_inf(deflected!=True)->tear</li>
    <li>damaged_inf->cut</li>
    <li>damaged_past(p=4)->scratched</li>
    <li>damaged_past(deflected!=True)->lacerated</li>
    <li>damaged_past(deflected!=True)->tore</li>
    <li>damaged_past->cut</li>
    <li>damaged_present->scratching</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>damaged_present(deflected!=True)->tearing</li>
    <li>damaged_present->cutting</li>
    <li>destroyed_past->mauled</li>
    <li>destroyed_past->lacerated</li>
    <li>destroyed_past->tore off</li>
    <li>destroyed_past->shredded</li>
    <li>destroyed_past->ripped</li>
    <li>destroyed_present->mauling</li>
    <li>destroyed_present->lacerating</li>
    <li>destroyed_present->tearing off</li>
    <li>destroyed_present->shredding</li>
    <li>destroyed_present->ripping</li>
  -->
  <Maneuver_Scratch_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->arranhar</li>
    <li>damaged_inf(deflected!=True)->dilacerar</li>
    <li>damaged_inf(deflected!=True)->rasgar</li>
    <li>damaged_inf->cortar</li>
    <li>damaged_past(p=4)->arranhou</li>
    <li>damaged_past(deflected!=True)->dilacerou</li>
    <li>damaged_past(deflected!=True)->rasgou</li>
    <li>damaged_past->cortou</li>
    <li>damaged_present->arranhando</li>
    <li>damaged_present(deflected!=True)->dilacerando</li>
    <li>damaged_present(deflected!=True)->rasgando</li>
    <li>damaged_present->cortando</li>
    <li>destroyed_past->atacou</li>
    <li>destroyed_past->lacerado</li>
    <li>destroyed_past->arrancou</li>
    <li>destroyed_past->desfiou</li>
    <li>destroyed_past->rasgou</li>
    <li>destroyed_present->atacando</li>
    <li>destroyed_present->lacerando</li>
    <li>destroyed_present->arrancando</li>
    <li>destroyed_present->desfiando</li>
    <li>destroyed_present->rasgando</li>
  </Maneuver_Scratch_Damage.rulePack.rulesStrings>
  
  <!-- EN: damaged_inf(p=4)->slash -->
  <Maneuver_Slash.rulePack.rulesStrings.0>damaged_inf(p=4)->corte</Maneuver_Slash.rulePack.rulesStrings.0>
  <!-- EN: damaged_inf->cut -->
  <Maneuver_Slash.rulePack.rulesStrings.1>damaged_inf->corte</Maneuver_Slash.rulePack.rulesStrings.1>
  <!-- EN: damaged_inf->chop -->
  <Maneuver_Slash.rulePack.rulesStrings.2>damaged_inf->golpe</Maneuver_Slash.rulePack.rulesStrings.2>
  <!-- EN: damaged_inf->hack -->
  <Maneuver_Slash.rulePack.rulesStrings.3>damaged_inf->corte</Maneuver_Slash.rulePack.rulesStrings.3>
  <!-- EN: damaged_inf->slice -->
  <Maneuver_Slash.rulePack.rulesStrings.4>damaged_inf->golpe</Maneuver_Slash.rulePack.rulesStrings.4>
  <!-- EN: damaged_inf(deflected!=True)->gash -->
  <Maneuver_Slash.rulePack.rulesStrings.5>damaged_inf(deflected!=True)->golpe</Maneuver_Slash.rulePack.rulesStrings.5>
  <!-- EN: damaged_past(p=4)->slashed -->
  <Maneuver_Slash.rulePack.rulesStrings.6>damaged_past(p=4)->cortou</Maneuver_Slash.rulePack.rulesStrings.6>
  <!-- EN: damaged_past->cut -->
  <Maneuver_Slash.rulePack.rulesStrings.7>damaged_past->cortou</Maneuver_Slash.rulePack.rulesStrings.7>
  <!-- EN: damaged_past->chopped -->
  <Maneuver_Slash.rulePack.rulesStrings.8>damaged_past->golpeou</Maneuver_Slash.rulePack.rulesStrings.8>
  <!-- EN: damaged_past->hacked -->
  <Maneuver_Slash.rulePack.rulesStrings.9>damaged_past->cortou</Maneuver_Slash.rulePack.rulesStrings.9>
  <!-- EN: damaged_past->sliced -->
  <Maneuver_Slash.rulePack.rulesStrings.10>damaged_past->golpeou</Maneuver_Slash.rulePack.rulesStrings.10>
  <!-- EN: damaged_past(deflected!=True)->gashed -->
  <Maneuver_Slash.rulePack.rulesStrings.11>damaged_past(deflected!=True)->golpeou</Maneuver_Slash.rulePack.rulesStrings.11>
  <!-- EN: damaged_present->slashing -->
  <Maneuver_Slash.rulePack.rulesStrings.12>damaged_present->incisando</Maneuver_Slash.rulePack.rulesStrings.12>
  <!-- EN: damaged_present->cutting -->
  <Maneuver_Slash.rulePack.rulesStrings.13>damaged_present->cortando</Maneuver_Slash.rulePack.rulesStrings.13>
  <!-- EN: damaged_present->slicing -->
  <Maneuver_Slash.rulePack.rulesStrings.14>damaged_present->torando</Maneuver_Slash.rulePack.rulesStrings.14>
  <!-- EN: damaged_present(deflected!=True)->gashing -->
  <Maneuver_Slash.rulePack.rulesStrings.15>damaged_present(deflected!=True)->rasgando</Maneuver_Slash.rulePack.rulesStrings.15>
  <!-- EN: damaged_present(deflected!=True)->tearing -->
  <Maneuver_Slash.rulePack.rulesStrings.16>damaged_present(deflected!=True)->fatiando</Maneuver_Slash.rulePack.rulesStrings.16>
  <!-- EN: damaged_present(deflected!=True)->lacerating -->
  <Maneuver_Slash.rulePack.rulesStrings.17>damaged_present(deflected!=True)->golpeando</Maneuver_Slash.rulePack.rulesStrings.17>
  <!-- EN: woundname->wound -->
  <Maneuver_Slash.rulePack.rulesStrings.18>woundname->machucado</Maneuver_Slash.rulePack.rulesStrings.18>
  <!-- EN: woundname(p=0.3)->opening -->
  <Maneuver_Slash.rulePack.rulesStrings.19>woundname(p=0.3)->abrindo</Maneuver_Slash.rulePack.rulesStrings.19>
  <!-- EN: flavortext_situation(recipient_flesh!=Mechanoid)->with blood dripping from the [woundname] -->
  <Maneuver_Slash.rulePack.rulesStrings.20>flavortext_situation(recipient_flesh!=Mechanoid)->com sangue escorrendo de [woundname]</Maneuver_Slash.rulePack.rulesStrings.20>
  <!-- EN: flavortext_situation->with fluids dripping from the [woundname] -->
  <Maneuver_Slash.rulePack.rulesStrings.21>flavortext_situation->com fluidos escorrendo de [woundname]</Maneuver_Slash.rulePack.rulesStrings.21>
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->exposing the flesh underneath -->
  <Maneuver_Slash.rulePack.rulesStrings.22>flavortext_consequence(recipient_flesh!=Mechanoid)->expondo a carne viva</Maneuver_Slash.rulePack.rulesStrings.22>
  <!-- EN: flavortext_consequence(recipient_flesh==Mechanoid)->exposing the machinery underneath -->
  <Maneuver_Slash.rulePack.rulesStrings.23>flavortext_consequence(recipient_flesh==Mechanoid)->expondo as peças internas</Maneuver_Slash.rulePack.rulesStrings.23>
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a gory [woundname] -->
  <Maneuver_Slash.rulePack.rulesStrings.24>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando uma [woundname] sangrando</Maneuver_Slash.rulePack.rulesStrings.24>
  <!-- EN: destroyed_past->bisected -->
  <Maneuver_Slash.rulePack.rulesStrings.25>destroyed_past->dividiu em duas partes</Maneuver_Slash.rulePack.rulesStrings.25>
  <!-- EN: destroyed_past->divided -->
  <Maneuver_Slash.rulePack.rulesStrings.26>destroyed_past->separou</Maneuver_Slash.rulePack.rulesStrings.26>
  <!-- EN: destroyed_past->halved -->
  <Maneuver_Slash.rulePack.rulesStrings.27>destroyed_past->repartiu</Maneuver_Slash.rulePack.rulesStrings.27>
  <!-- EN: destroyed_past->separated -->
  <Maneuver_Slash.rulePack.rulesStrings.28>destroyed_past->partiu ao meio</Maneuver_Slash.rulePack.rulesStrings.28>
  <!-- EN: destroyed_past->split -->
  <Maneuver_Slash.rulePack.rulesStrings.29>destroyed_past->dividiu</Maneuver_Slash.rulePack.rulesStrings.29>
  <!-- EN: destroyed_present->bisecting -->
  <Maneuver_Slash.rulePack.rulesStrings.30>destroyed_present->dividindo em duas partes</Maneuver_Slash.rulePack.rulesStrings.30>
  <!-- EN: destroyed_present->dividing -->
  <Maneuver_Slash.rulePack.rulesStrings.31>destroyed_present->separando</Maneuver_Slash.rulePack.rulesStrings.31>
  <!-- EN: destroyed_present->halving -->
  <Maneuver_Slash.rulePack.rulesStrings.32>destroyed_present->repartindo</Maneuver_Slash.rulePack.rulesStrings.32>
  <!-- EN: destroyed_present->separating -->
  <Maneuver_Slash.rulePack.rulesStrings.33>destroyed_present->separando</Maneuver_Slash.rulePack.rulesStrings.33>
  <!-- EN: destroyed_present->splitting -->
  <Maneuver_Slash.rulePack.rulesStrings.34>destroyed_present->dividindo</Maneuver_Slash.rulePack.rulesStrings.34>
  <!-- EN: destroyed_suffix->into neat pieces -->
  <Maneuver_Slash.rulePack.rulesStrings.35>destroyed_suffix->em belas peças</Maneuver_Slash.rulePack.rulesStrings.35>
  <!-- EN: destroyed_suffix->cleanly -->
  <Maneuver_Slash.rulePack.rulesStrings.36>destroyed_suffix->de forma limpa</Maneuver_Slash.rulePack.rulesStrings.36>
  <!-- EN: destroyed_suffix(target_part_destroyed_count==1)->exposing its inner workings -->
  <Maneuver_Slash.rulePack.rulesStrings.37>destroyed_suffix(target_part_destroyed_count==1)->expondo seu funcionamento interno</Maneuver_Slash.rulePack.rulesStrings.37>
  <!-- EN: destroyed_suffix(target_part_destroyed_count==1)->slicing it in twain -->
  <Maneuver_Slash.rulePack.rulesStrings.38>destroyed_suffix(target_part_destroyed_count==1)->cortando em dois</Maneuver_Slash.rulePack.rulesStrings.38>
  
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->leaving an enormous bruise -->
  <Maneuver_Smash.rulePack.rulesStrings.0>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando uma enorme contusão</Maneuver_Smash.rulePack.rulesStrings.0>
  <!-- EN: flavortext_consequence->leaving the area visibly deformed -->
  <Maneuver_Smash.rulePack.rulesStrings.1>flavortext_consequence->deixando a área visivelmente deformada</Maneuver_Smash.rulePack.rulesStrings.1>
  <!-- EN: flavortext_consequence->knocking [RECIPIENT_objective] off balance -->
  <Maneuver_Smash.rulePack.rulesStrings.2>flavortext_consequence->batendo [RECIPIENT_objective] desequilibrando</Maneuver_Smash.rulePack.rulesStrings.2>
  <!-- EN: flavortext_consequence->knocking [RECIPIENT_objective] to the side -->
  <Maneuver_Smash.rulePack.rulesStrings.3>flavortext_consequence->batendo [RECIPIENT_objective] para o lado</Maneuver_Smash.rulePack.rulesStrings.3>
  <!-- EN: destroyed_suffix->[to] pieces -->
  <Maneuver_Smash.rulePack.rulesStrings.4>destroyed_suffix->[to] peças</Maneuver_Smash.rulePack.rulesStrings.4>
  <!-- EN: destroyed_suffix->[to] bits -->
  <Maneuver_Smash.rulePack.rulesStrings.5>destroyed_suffix->[to] pedaços</Maneuver_Smash.rulePack.rulesStrings.5>
  <!-- EN: destroyed_suffix(recipient_flesh!=Mechanoid)->[to] a fine mist -->
  <Maneuver_Smash.rulePack.rulesStrings.6>destroyed_suffix(recipient_flesh!=Mechanoid)->[to] uma névoa fina</Maneuver_Smash.rulePack.rulesStrings.6>
  <!-- EN: destroyed_suffix->[to] fragments -->
  <Maneuver_Smash.rulePack.rulesStrings.7>destroyed_suffix->[to] fragmentos</Maneuver_Smash.rulePack.rulesStrings.7>
  
  <!-- EN:
    <li>damaged_inf(p=4)->smash</li>
    <li>damaged_inf->bash</li>
    <li>damaged_inf->clobber</li>
    <li>damaged_inf->slam</li>
    <li>damaged_inf->strike</li>
    <li>damaged_past(p=4)->smashed</li>
    <li>damaged_past->bashed</li>
    <li>damaged_past->clobbered</li>
    <li>damaged_past->slammed</li>
    <li>damaged_past->struck</li>
    <li>damaged_present->smashing</li>
    <li>damaged_present->bashing</li>
    <li>damaged_present->clobbering</li>
    <li>damaged_present(deflected!=True)->bruising</li>
    <li>damaged_present(deflected!=True)->lacerating</li>
    <li>destroyed_past->shattered</li>
    <li>destroyed_past->crushed</li>
    <li>destroyed_past->obliterated</li>
    <li>destroyed_past->annihilated</li>
    <li>destroyed_past->broke</li>
    <li>destroyed_present->shattering</li>
    <li>destroyed_present->crushing</li>
    <li>destroyed_present->obliterating</li>
    <li>destroyed_present->annihilating</li>
    <li>destroyed_present->breaking</li>
  -->
  <Maneuver_Smash_Damage.rulePack.rulesStrings>
    <li>damaged_inf(p=4)->esmagar</li>
    <li>damaged_inf->surrar</li>
    <li>damaged_inf->espancar</li>
    <li>damaged_inf->atacar</li>
    <li>damaged_inf->atacar</li>
    <li>damaged_past(p=4)->esmagou</li>
    <li>damaged_past->surrou</li>
    <li>damaged_past->espancou</li>
    <li>damaged_past->atacou</li>
    <li>damaged_past->atacou</li>
    <li>damaged_present->esmagando</li>
    <li>damaged_present->batendo</li>
    <li>damaged_present->espancando</li>
    <li>damaged_present(deflected!=True)->atacando</li>
    <li>damaged_present(deflected!=True)->atacando</li>
    <li>destroyed_past->despedaçado</li>
    <li>destroyed_past->esmagado</li>
    <li>destroyed_past->destruido</li>
    <li>destroyed_past->aniquilado</li>
    <li>destroyed_past->quebrado</li>
    <li>destroyed_present->despedaçando</li>
    <li>destroyed_present->esmagando</li>
    <li>destroyed_present->destruindo</li>
    <li>destroyed_present->aniquilando</li>
    <li>destroyed_present->quebrando</li>
  </Maneuver_Smash_Damage.rulePack.rulesStrings>
  
  <!-- EN: damaged_inf(p=4)->stab -->
  <Maneuver_Stab.rulePack.rulesStrings.0>damaged_inf(p=4)->punhalada</Maneuver_Stab.rulePack.rulesStrings.0>
  <!-- EN: damaged_inf->jab -->
  <Maneuver_Stab.rulePack.rulesStrings.1>damaged_inf->furada</Maneuver_Stab.rulePack.rulesStrings.1>
  <!-- EN: damaged_inf(deflected!=True)->pierce -->
  <Maneuver_Stab.rulePack.rulesStrings.2>damaged_inf(deflected!=True)->esburacação</Maneuver_Stab.rulePack.rulesStrings.2>
  <!-- EN: damaged_inf(deflected!=True)->puncture -->
  <Maneuver_Stab.rulePack.rulesStrings.3>damaged_inf(deflected!=True)->perfuração</Maneuver_Stab.rulePack.rulesStrings.3>
  <!-- EN: damaged_inf(deflected!=True)->skewer -->
  <Maneuver_Stab.rulePack.rulesStrings.4>damaged_inf(deflected!=True)->espetada</Maneuver_Stab.rulePack.rulesStrings.4>
  <!-- EN: damaged_past(p=4)->stabbed -->
  <Maneuver_Stab.rulePack.rulesStrings.5>damaged_past(p=4)->apunhalou</Maneuver_Stab.rulePack.rulesStrings.5>
  <!-- EN: damaged_past->jabbed -->
  <Maneuver_Stab.rulePack.rulesStrings.6>damaged_past->furou</Maneuver_Stab.rulePack.rulesStrings.6>
  <!-- EN: damaged_past(deflected!=True)->pierced -->
  <Maneuver_Stab.rulePack.rulesStrings.7>damaged_past(deflected!=True)->perfurou</Maneuver_Stab.rulePack.rulesStrings.7>
  <!-- EN: damaged_past(deflected!=True)->punctured -->
  <Maneuver_Stab.rulePack.rulesStrings.8>damaged_past(deflected!=True)->perfurou</Maneuver_Stab.rulePack.rulesStrings.8>
  <!-- EN: damaged_past(deflected!=True)->skewered -->
  <Maneuver_Stab.rulePack.rulesStrings.9>damaged_past(deflected!=True)->espetou</Maneuver_Stab.rulePack.rulesStrings.9>
  <!-- EN: damaged_present(deflected!=True)->piercing -->
  <Maneuver_Stab.rulePack.rulesStrings.10>damaged_present(deflected!=True)->furando</Maneuver_Stab.rulePack.rulesStrings.10>
  <!-- EN: damaged_present(deflected!=True)->puncturing -->
  <Maneuver_Stab.rulePack.rulesStrings.11>damaged_present(deflected!=True)->perfurando</Maneuver_Stab.rulePack.rulesStrings.11>
  <!-- EN: damaged_present(deflected!=True)->penetrating -->
  <Maneuver_Stab.rulePack.rulesStrings.12>damaged_present(deflected!=True)->penetrando</Maneuver_Stab.rulePack.rulesStrings.12>
  <!-- EN: damaged_present(deflected!=True)->skewering -->
  <Maneuver_Stab.rulePack.rulesStrings.13>damaged_present(deflected!=True)->espetando</Maneuver_Stab.rulePack.rulesStrings.13>
  <!-- EN: woundname->hole -->
  <Maneuver_Stab.rulePack.rulesStrings.14>woundname->buraco</Maneuver_Stab.rulePack.rulesStrings.14>
  <!-- EN: woundname->wound -->
  <Maneuver_Stab.rulePack.rulesStrings.15>woundname->machucado</Maneuver_Stab.rulePack.rulesStrings.15>
  <!-- EN: woundname->crevice -->
  <Maneuver_Stab.rulePack.rulesStrings.16>woundname->fenda</Maneuver_Stab.rulePack.rulesStrings.16>
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bloody [woundname] -->
  <Maneuver_Stab.rulePack.rulesStrings.17>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando um sangrento [woundname]</Maneuver_Stab.rulePack.rulesStrings.17>
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a torn [woundname] -->
  <Maneuver_Stab.rulePack.rulesStrings.18>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando um rasgado [woundname]</Maneuver_Stab.rulePack.rulesStrings.18>
  <!-- EN: flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a bleeding [woundname] -->
  <Maneuver_Stab.rulePack.rulesStrings.19>flavortext_consequence(recipient_flesh!=Mechanoid)->deixando um sangramento [woundname]</Maneuver_Stab.rulePack.rulesStrings.19>
  <!-- EN: destroyed_past->impaled -->
  <Maneuver_Stab.rulePack.rulesStrings.20>destroyed_past->impalado</Maneuver_Stab.rulePack.rulesStrings.20>
  <!-- EN: destroyed_past->perforated -->
  <Maneuver_Stab.rulePack.rulesStrings.21>destroyed_past->perfurado</Maneuver_Stab.rulePack.rulesStrings.21>
  <!-- EN: destroyed_past->skewered -->
  <Maneuver_Stab.rulePack.rulesStrings.22>destroyed_past->espetado</Maneuver_Stab.rulePack.rulesStrings.22>
  <!-- EN: destroyed_present->impaling -->
  <Maneuver_Stab.rulePack.rulesStrings.23>destroyed_present->impalando</Maneuver_Stab.rulePack.rulesStrings.23>
  <!-- EN: destroyed_present->perforating -->
  <Maneuver_Stab.rulePack.rulesStrings.24>destroyed_present->perfurando</Maneuver_Stab.rulePack.rulesStrings.24>
  <!-- EN: destroyed_present->skewering -->
  <Maneuver_Stab.rulePack.rulesStrings.25>destroyed_present->espetando</Maneuver_Stab.rulePack.rulesStrings.25>
  <!-- EN: destroyed_suffix->straight through -->
  <Maneuver_Stab.rulePack.rulesStrings.26>destroyed_suffix->diretamente através</Maneuver_Stab.rulePack.rulesStrings.26>
  <!-- EN: destroyed_suffix->leaving a clean hole -->
  <Maneuver_Stab.rulePack.rulesStrings.27>destroyed_suffix->deixando um buraco limpo</Maneuver_Stab.rulePack.rulesStrings.27>
  <!-- EN: destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->leaving it leaking gory fluids -->
  <Maneuver_Stab.rulePack.rulesStrings.28>destroyed_suffix(recipient_flesh!=Mechanoid,target_part_destroyed_count==1)->deixando fluidos vazando</Maneuver_Stab.rulePack.rulesStrings.28>
  <!-- EN: destroyed_suffix(target_part_destroyed_count==1)->leaving it leaking unrecognizable fluids -->
  <Maneuver_Stab.rulePack.rulesStrings.29>destroyed_suffix(target_part_destroyed_count==1)->deixando fluidos irreconhecíveis vazando</Maneuver_Stab.rulePack.rulesStrings.29>
  
</LanguageData>